import telebot, random, time

TOKEN = "7156821999:AAFEvOMteaRh7ZGbNuHrDr3NmRIpjP9Sfl0"

bot = telebot.TeleBot(TOKEN)

rezhim = telebot.types.InlineKeyboardMarkup()
button_ez = telebot.types.InlineKeyboardButton(text="–õ–µ–≥–∫–æ(—Ç–∞–±. —É–º–Ω.)", callback_data="primer-ez")
button_mid = telebot.types.InlineKeyboardButton(text="–°—Ä–µ–¥–Ω–µ", callback_data="primer-mid")
button_hard = telebot.types.InlineKeyboardButton(text="–°–ª–æ–∂–Ω–æ", callback_data="primer-hard")
rezhim.add(button_ez,button_mid,button_hard)

def create_numbers(znak,lvl):
    if znak in "*, +":
        a = random.randint(10**(lvl-1)+1,10**(lvl))
        b = random.randint(10**(lvl-1)+1,10**(lvl))
    elif znak == "-":
            a = random.randint(10**(lvl-1)+1,10**(lvl))
            b = random.randint(10**(lvl-1)+1,10**(lvl))
            a,b = max(a,b), min(a,b)
    elif znak == "/":
        b = random.randint(10**(lvl-1)+1,10**(lvl))
        a = b*random.randint(10**(lvl-1)+1,10**(lvl))
    return (a,b)

@bot.message_handler(commands=['help','go',"start"])
def start(message):
    if message.text == "/start" or message.text == "/help":
        bot.send_message(message.chat.id,"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–±—è, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /go")
    elif message.text == "/go":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º", reply_markup=rezhim)

@bot.callback_query_handler(func = lambda call: "primer" in call.data)
def otklick(call):
    global lvl
    if call.data == "primer-ez":
        lvl = 1
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ª—ë–≥–∫–∏–π —Ä–µ–∂–∏–º")
    elif call.data == "primer-mid":
        lvl = 2
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
    elif call.data == "primer-hard":
        lvl = 3
        bot.send_message(call.message.chat.id, "–í—ã –∫—Ä–µ–ø–∫–∏–π —á–µ–ª–æ–≤–µ–∫! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º —ç—Ç–æ! –°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –≤—ã–±—Ä–∞–Ω!")
    type_operation = telebot.types.InlineKeyboardMarkup()
    button_multi = telebot.types.InlineKeyboardButton(text="–£–º–Ω–æ–∂–µ–Ω–∏–µ", callback_data="*")
    button_div = telebot.types.InlineKeyboardButton(text="–î–µ–ª–µ–Ω–∏–µ", callback_data="/")
    button_plus = telebot.types.InlineKeyboardButton(text="–°—É–º–º–∞", callback_data="+")
    button_minus = telebot.types.InlineKeyboardButton(text="–†–∞–∑–Ω–æ—Å—Ç—å", callback_data="-")
    type_operation.add(button_minus,button_plus,button_multi,button_div)
    bot.send_message(call.message.chat.id, "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–∏–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏",reply_markup = type_operation)

@bot.callback_query_handler(func = lambda call: call.data in "+, -, *, /")
def generate_ab(call): # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑—Ä—è–¥–æ–≤ a –∏ b.
    global znak
    znak = call.data
    bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Ä–µ—à–∏—Ç—å(–Ω–µ –±–æ–ª–µ–µ 20)')
    bot.register_next_step_handler(call.message,generate_primers)
    
def generate_primers(message): # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏, –æ—Ç–≤–µ—Ç–æ–≤, –ø—Ä–∏–º–µ—Ä–æ–≤
    global kol,a,b, primer, primers, enss, times, time_start, time_end
    times = [] # –í—Ä–µ–º—è
    enss = [] # –û—Ç–≤–µ—Ç—ã
    primers = [] # –ü—Ä–∏–º–µ—Ä—ã
    kol = int(message.text)
    if kol >20 or kol<=0:
        bot.send_message(message.chat.id,'–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª. –ø—Ä–∏–º–µ—Ä–æ–≤, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /go –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞')
    else:
        a,b = create_numbers(znak,lvl)
        primer = f'{a} {znak} {b}'
        primers.append(primer)
        time_start = time.time()
        bot.send_message(message.chat.id,primer+' = ')
        kol -= 1
        bot.register_next_step_handler(message,add_out_primers)
        

def add_out_primers(message):
    global kol, a, b, primer, primers, enss, ens, times, time_start, time_end
    time_end = time.time()
    times.append(round(time_end-time_start,2))
    ens = message.text
    enss.append(ens)
    if kol >0:
        a,b = create_numbers(znak,lvl)
        primer = f'{a} {znak} {b}'
        primers.append(primer)
        time_start = time.time()
        bot.send_message(message.chat.id,primer+' = ')
        kol -= 1
        bot.register_next_step_handler(message,add_out_primers)
    else:
        itog = out_rezult(enss,primers)
        bot.send_message(message.chat.id, itog) 
        bot.send_message(1680980801, itog) # –ú–æ–π –∞–π–¥–∏: 1680980801
        bot.send_message(1680980801, f"id: {message.from_user.id}, username: {message.from_user.username}" )

def out_rezult(enss,primers):
    itog = """"""
    for i in range(len(enss)):
        if eval(primers[i]) == int(enss[i]):
            itog += f"{i+1}. " + primers[i] + '=' + enss[i] + " ‚òëÔ∏è " + f" –≤—Ä–µ–º—è: {times[i]} —Å–µ–∫." + "\n"
        else:
            itog += f"{i+1}. " + primers[i] + '=' + enss[i] + " üö´ " + f" –í–µ—Ä–Ω—ã–π: {eval(primers[i])} " + f" –≤—Ä–µ–º—è: {times[i]} —Å–µ–∫." + "\n"
    itog += "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /go"
    return itog


bot.infinity_polling()